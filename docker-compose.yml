version: '2.3'
services:
  alb:
    container_name: alb
    depends_on:
      api:
        condition: service_healthy
      client:
        condition: service_healthy
    image: 'ekino/nginx-brotli:latest-1.12.2-bfd2885'
    volumes:
      - './nginx/nginx.conf:/etc/nginx/nginx.conf'
      - './nginx/local.carpedalan.com.pem:/etc/ssl/certs/local.carpedalan.com.pem'
      - './nginx/local.carpedalan.com-key.pem:/etc/ssl/private/local.carpedalan.com-key.pem'
    ports:
      - '80:80'
      - '443:443'
  api:
    container_name: api
    depends_on:
      pg:
        condition: service_healthy
    tty: true
    build:
      context: .
      target: dev
    volumes:
      - './nodemon.json:/app/nodemon.json:delegated'
      - './server:/app/server:delegated'
      - './index.js:/app/index.js:delegated'
      - './db:/app/db:delegated'
      - './shared:/app/shared:delegated'
      - './goodDataWithEtagAndKey.json:/app/goodDataWithEtagAndKey.json'
      - './.env-local:/app/.env'
    ports:
      - '3001:80'
      - '9227:9229'
    environment:
      PORT: 80
    command: yarn migrateAndStart
    healthcheck:
      test:
        - CMD-SHELL
        - 'curl --silent --fail localhost:80/healthcheck || exit 1'
      interval: 1s
      timeout: 1s
      retries: 40
  client:
    tty: true
    container_name: client
    build:
      context: ./client
    volumes:
      - './client/src:/app/src'
      - './client/scripts:/app/scripts'
      - './client/docs:/app/docs'
      - './client/webpack.config.js:/app/webpack.config.js'
      - './client/devServer.js:/app/devServer.js'
    ports:
      - '4001:4000'
    healthcheck:
      test:
        - CMD-SHELL
        - ./scripts/ping.js
      interval: 1s
      timeout: 1s
      retries: 15
  pg:
    logging:
      driver: none
    image: 'postgres:10.0-alpine'
    container_name: pg
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '5433:5432'
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres
      interval: 1s
      timeout: 1s
      retries: 20
