version: '2.3'

services:
  alb:
    container_name: alb
    depends_on:
      carpe_api: 
        condition: service_healthy
    image: ekino/nginx-brotli:latest-1.12.2-bfd2885
    restart: always
    volumes: 
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/local.carpedalan.com.pem:/etc/ssl/certs/local.carpedalan.com.pem
      - ./nginx/local.carpedalan.com-key.pem:/etc/ssl/private/local.carpedalan.com-key.pem
    ports:
      - 443:443

  carpe_api:
    container_name: c_api
    depends_on:
      pg:
        condition: service_healthy
    tty: true
    build:
      context: .
      target: dev
    volumes:
      - './nodemon.json:/app/nodemon.json:delegated'
      - './server:/app/server:delegated'
      - './scripts:/app/scripts:delegated'
      - './index.js:/app/index.js:delegated'
      - './db:/app/db:delegated'
      - './shared:/app/shared:delegated'
      - './goodDataWithEtagAndKey.json:/app/goodDataWithEtagAndKey.json'
      - './.env-local:/app/.env'
      - './dev-dump.sql:/app/dev-dump.sql'
    ports:
      - 3001:80
      - 9227:9229
    environment:
      PORT: 80
    command: yarn migrateAndStart
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:80/healthcheck || exit 1"]
      interval: 1s
      timeout: 1s
      retries: 40

  client: 
    tty: true
    container_name: client
    build:
      context: ./client
    volumes: 
      - ./client/src:/app/src
      - ./client/docs:/app/docs
      - ./client/webpack.config.js:/app/webpack.config.js
      - ./client/devServer.js:/app/devServer.js

  pg:
    logging: 
      driver: "none"

    image: postgres:10.0-alpine
    container_name: pg
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 20

  pg_test:
    logging: 
      driver: "none"
    image: postgres:10.0-alpine
    container_name: test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5555:5432"
    # command: '-p 5555'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 20

  pg_migrate:
    logging: 
      driver: "none"
    container_name: migrate
    environment: 
      NODE_ENV: test
      MIGRATING: 'true'
      PG_HOST: pg_test
      PG_PORT: 5432
    depends_on:
      pg_test:
        condition: service_healthy
    tty: true
    volumes:
      - ./db:/app/db:delegated
      - ./shared:/app/shared:delegated
    build:
      context: .
      target: dev
    command: yarn migrate

  aws:
    container_name: aws
    healthcheck: 
      test: "bash -c 'AWS_ACCESS_KEY_ID=fake AWS_SECRET_ACCESS_KEY=fake aws --endpoint-url=http://localhost:4572 s3 ls'"    
      interval: 10s
      timeout: 5s
      retries: 30
    image: localstack/localstack:0.10.5
    environment:
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - PORT_WEB_UI=8081
    ports:
      - "4567-4595:4567-4595"
      - "${PORT_WEB_UI-8081}:${PORT_WEB_UI-8081}"    

